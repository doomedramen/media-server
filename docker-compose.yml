version: "4"

services:

  gluetun:
  
    # ----------------------------------------
    # GLUETUN
    # ----------------------------------------
    image: qmcgaw/gluetun:latest
    container_name: gluetun
    network_mode: bridge
    cap_add:
      - NET_ADMIN
    devices:
      - /dev/net/tun:/dev/net/tun
    ports:
      - 8888:8888/tcp # HTTP proxy
      - 8388:8388/tcp # Shadowsocks
      - 8388:8388/udp # Shadowsocks
      - 7540:7540/tcp # Built-in HTTP control server
      # other containers ports
      - 9091:9091 # transmission webui
      - 51413:51413 # transmission
      - 51413:51413/udp # transmission
      - 8112:8112 # deluge webui
      - 58846:58846 # deluge daemon
      - 58846:58846/udp # deluge daemon
      - 9117:9117 # jackett
      - 8191:8191 # flaresolverr
    volumes:
      - ${CONFIG_ROOT}/Gluetun:/gluetun
      - ${CONFIG_ROOT}/Gluetun/port_forward:/tmp/gluetun/forwarded_port
    environment:
      - VPNSP=mullvad
      - VPN_TYPE=openvpn
      - OPENVPN_USER=${MULLVAD_USER}
      - OPENVPN_PASSWORD=m
      - TZ=${TIMEZONE}
      - COUNTRY=UK
      - CITY=London
    restart: always
    healthcheck:
      test: /gluetun-entrypoint healthcheck
      interval: 5s
      retries: 1
      start_period: 10s
      timeout: 5s
      
  # ----------------------------------------
  # FLARESOLVERR
  # ----------------------------------------
  flaresolverr:
    container_name: flaresolverr
    image: ghcr.io/flaresolverr/flaresolverr:latest
    environment:
      - LOG_LEVEL=info
    network_mode: service:gluetun
    restart: always
    depends_on:
      - gluetun
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://localhost:8191 || exit 1
      interval: 60s
      retries: 5
      start_period: 20s
      timeout: 10s
      
  # ----------------------------------------
  # JACKETT
  # ----------------------------------------
  jackett:
    image: linuxserver/jackett:latest
    container_name: jackett
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=${TIMEZONE}
    volumes:
      - ${CONFIG_ROOT}/Jackett:/config
      - ${DOWNLOADS_ROOT}:/downloads
    network_mode: service:gluetun
    restart: always
    depends_on:
      - gluetun
      - flaresolverr
    healthcheck:
      test: curl --fail http://localhost:9117/UI/Dashboard || exit 1
      interval: 60s
      retries: 5
      start_period: 20s
      timeout: 10s
     
  # ----------------------------------------
  # TRANSMISSION
  # ---------------------------------------- 
  transmission:
    image: lscr.io/linuxserver/transmission:latest
    container_name: transmission
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=${TIMEZONE}
      - TRANSMISSION_WEB_HOME=/flood-for-transmission/ #optional
      #- USER=username #optional
      #- PASS=password #optional
      #- WHITELIST=iplist #optional
      #- PEERPORT=peerport #optional
      #- HOST_WHITELIST=dnsname list #optional
    volumes:
      - ${CONFIG_ROOT}/Transmission:/config
      - ${DOWNLOADS_ROOT}:/downloads
    network_mode: service:gluetun
    restart: always
    depends_on:
      - gluetun
    healthcheck:
      test: curl --fail http://localhost:9091 || exit 1
      interval: 60s
      retries: 5
      start_period: 20s
      timeout: 10s
    
  # ----------------------------------------
  # RADARR
  # ----------------------------------------
  radarr:
    image: linuxserver/radarr:latest
    container_name: radarr
    network_mode: bridge
    ports:
      - 7878:7878/tcp # radarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=${TIMEZONE}
    volumes:
      - ${CONFIG_ROOT}/Radarr:/config
      - ${MEDIA_ROOT}:/media
      - ${DOWNLOADS_ROOT}:/downloads
    restart: always
    depends_on:
      - gluetun
      - jackett
    healthcheck:
      test: curl --fail http://localhost:7878 || exit 1
      interval: 60s
      retries: 5
      start_period: 20s
      timeout: 10s

  # ----------------------------------------
  # SONARR
  # ----------------------------------------
  sonarr:
    image: linuxserver/sonarr:develop
    container_name: sonarr
    network_mode: bridge
    ports:
      - 8989:8989/tcp # sonarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=${TIMEZONE}
    volumes:
      - ${CONFIG_ROOT}/Sonarr:/config
      - ${MEDIA_ROOT}:/media
      - ${DOWNLOADS_ROOT}:/downloads
    restart: always
    depends_on:
      - gluetun
      - jackett
    healthcheck:
      test: curl --fail http://localhost:8989 || exit 1
      interval: 60s
      retries: 5
      start_period: 20s
      timeout: 10s
  
  # ----------------------------------------
  # BAZARR
  # ----------------------------------------
  bazarr:
    image: lscr.io/linuxserver/bazarr:latest
    container_name: bazarr
    network_mode: bridge
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/London
    volumes:
      - ${CONFIG_ROOT}/Bazarr:/config
      - ${MEDIA_ROOT}/tv:/tv
      - ${MEDIA_ROOT}/movies:/movies
      - ${MEDIA_ROOT}:/media
    ports:
      - 6767:6767
    restart: always
    healthcheck:
      test: curl --fail http://localhost:6767 || exit 1
      interval: 60s
      retries: 5
      start_period: 20s
      timeout: 10s
  
  # ----------------------------------------
  # PLEX
  # ----------------------------------------
  plex:
    image: lscr.io/linuxserver/plex:latest
    container_name: plex
    network_mode: host
    environment:
      - PUID=1000
      - PGID=1000
      - VERSION=docker
    volumes:
      - ${CONFIG_ROOT}/Plex:/config
      - ${MEDIA_ROOT}/tv:/tv
      - ${MEDIA_ROOT}/movies:/movies
    devices:
      - /dev/dri:/dev/dri
    privileged: true
    restart: always
    healthcheck:
      test: curl --fail http://localhost:32400/web/index.html || exit 1
      interval: 60s
      retries: 5
      start_period: 20s
      timeout: 10s
      
  # ----------------------------------------
  # OVERSEERR
  # ----------------------------------------
  overseerr:
    image: lscr.io/linuxserver/overseerr:latest
    container_name: overseerr
    network_mode: bridge
    environment:
      - LOG_LEVEL=debug
      - TZ=${TIMEZONE}
    ports:
      - 5055:5055
    volumes:
      - ${CONFIG_ROOT}/Overseerr:/config
    restart: always
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://localhost:5055 || exit 1
      interval: 60s
      retries: 5
      start_period: 20s
      timeout: 10s
  
  # ----------------------------------------
  # HOMEBRIDGE
  # ----------------------------------------
  homebridge:
    image: oznu/homebridge:latest
    container_name: homebridge
    restart: always
    network_mode: host
    ports:
      - 8581:8581/tcp
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=${TIMEZONE}
    volumes:
      - ${CONFIG_ROOT}/homebridge:/homebridge
    logging:
      driver: json-file
      options:
        max-size: 10mb
        max-file: 1
    healthcheck:
      test: curl --fail http://localhost:8581 || exit 1
      interval: 60s
      retries: 5
      start_period: 20s
      timeout: 10s
   
  # ----------------------------------------
  # HEIMDALL
  # ----------------------------------------
  heimdall:
    image: lscr.io/linuxserver/heimdall:latest
    container_name: heimdall
    network_mode: bridge
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=${TIMEZONE}
    volumes:
      - ${CONFIG_ROOT}/Heimdall:/config
    ports:
      - 8080:80
      - 8043:443
    restart: always
    healthcheck:
      test: curl --fail http://localhost || exit 1
      interval: 60s
      retries: 5
      start_period: 20s
      timeout: 10s
  
  # ----------------------------------------
  # WATCHTOWER
  # ----------------------------------------
  watchtower:
    container_name: watchtower
    image: containrrr/watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
     
    command: --schedule "0 0 3 * * ?" --cleanup


